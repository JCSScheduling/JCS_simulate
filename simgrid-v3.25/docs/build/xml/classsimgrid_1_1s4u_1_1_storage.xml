<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classsimgrid_1_1s4u_1_1_storage" kind="class" language="C++" prot="public">
    <compoundname>simgrid::s4u::Storage</compoundname>
    <basecompoundref prot="public" virt="non-virtual">simgrid::xbt::Extendable&lt; Storage &gt;</basecompoundref>
    <includes refid="_storage_8hpp" local="no">Storage.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsimgrid_1_1s4u_1_1_storage_1a0ca46fcfc28735fdceb560739f268082" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend simgrid::s4u::Storage::Engine</definition>
        <argsstring></argsstring>
        <name>Engine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="32" column="10" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsimgrid_1_1s4u_1_1_storage_1acb17138e6900643a32a4a4cac0def5e9" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend simgrid::s4u::Storage::Io</definition>
        <argsstring></argsstring>
        <name>Io</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="33" column="10" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsimgrid_1_1s4u_1_1_storage_1a3c8ad5d3f18a692a9618db8d9b4c4c8c" prot="private" static="no" mutable="no">
        <type><ref refid="classsimgrid_1_1s4u_1_1_host" kindref="compound">Host</ref> *</type>
        <definition>Host* simgrid::s4u::Storage::attached_to_</definition>
        <argsstring></argsstring>
        <name>attached_to_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="77" column="8" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsimgrid_1_1s4u_1_1_storage_1a22b17274c069420d4baebd49c07b7e46" prot="private" static="no" mutable="no">
        <type>kernel::resource::StorageImpl *const</type>
        <definition>kernel::resource::StorageImpl* const simgrid::s4u::Storage::pimpl_</definition>
        <argsstring></argsstring>
        <name>pimpl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="78" column="39" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsimgrid_1_1s4u_1_1_storage_1ac184414da1b76f2c64aaac0553cc2302" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string simgrid::s4u::Storage::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="79" column="15" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classsimgrid_1_1s4u_1_1_storage_1af2a5e515d0fc485a8b3040b70140a7de" prot="public" static="yes" mutable="no">
        <type>xbt::signal&lt; void(<ref refid="classsimgrid_1_1s4u_1_1_storage" kindref="compound">Storage</ref> &amp;)&gt;</type>
        <definition>xbt::signal&lt;void(Storage&amp;)&gt; simgrid::s4u::Storage::on_creation</definition>
        <argsstring></argsstring>
        <name>on_creation</name>
        <briefdescription>
<para>Callback signal fired when a new Storage is created. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="44" column="22" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsimgrid_1_1s4u_1_1_storage_1acdd1ac6e9c25ea7394d23829b4438195" prot="public" static="yes" mutable="no">
        <type>xbt::signal&lt; void(<ref refid="classsimgrid_1_1s4u_1_1_storage" kindref="compound">Storage</ref> const  &amp;)&gt;</type>
        <definition>xbt::signal&lt;void(Storage const&amp;)&gt; simgrid::s4u::Storage::on_destruction</definition>
        <argsstring></argsstring>
        <name>on_destruction</name>
        <briefdescription>
<para>Callback signal fired when a Storage is destroyed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="46" column="22" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsimgrid_1_1s4u_1_1_storage_1a0dcbdd974d7d76c59693fe96d2bb39d9" prot="public" static="yes" mutable="no">
        <type>xbt::signal&lt; void(<ref refid="classsimgrid_1_1s4u_1_1_storage" kindref="compound">Storage</ref> const  &amp;)&gt;</type>
        <definition>xbt::signal&lt;void(Storage const&amp;)&gt; simgrid::s4u::Storage::on_state_change</definition>
        <argsstring></argsstring>
        <name>on_state_change</name>
        <briefdescription>
<para>Callback signal fired when a Storage&apos;s state changes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="48" column="22" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1a68d0fd3f5f498fb3615d933b8016192d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>simgrid::s4u::Storage::Storage</definition>
        <argsstring>(const std::string &amp;name, kernel::resource::StorageImpl *pimpl)</argsstring>
        <name>Storage</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>kernel::resource::StorageImpl *</type>
          <declname>pimpl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="37" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1a3a4de7defe005cc3335095fb2bde0efd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string const  &amp;</type>
        <definition>std::string const&amp; simgrid::s4u::Storage::get_name</definition>
        <argsstring>() const</argsstring>
        <name>get_name</name>
        <briefdescription>
<para>Retrieves the name of that storage as a C++ string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="55" column="21" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1adc050acaa1ea1e22c245bca2f405e952" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* simgrid::s4u::Storage::get_cname</definition>
        <argsstring>() const</argsstring>
        <name>get_cname</name>
        <briefdescription>
<para>Retrieves the name of that storage as a C string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="57" column="14" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1a0b1ac9ccab7637a8c604324b5786ceda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* simgrid::s4u::Storage::get_type</definition>
        <argsstring>() const</argsstring>
        <name>get_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="59" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1ad9c658fee823155b4e69eaa396901eeb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsimgrid_1_1s4u_1_1_host" kindref="compound">Host</ref> *</type>
        <definition>Host* simgrid::s4u::Storage::get_host</definition>
        <argsstring>() const</argsstring>
        <name>get_host</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="60" column="8" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1ad04ff33c99455bb2aff02ecb90031ab6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void simgrid::s4u::Storage::set_host</definition>
        <argsstring>(Host *host)</argsstring>
        <name>set_host</name>
        <param>
          <type><ref refid="classsimgrid_1_1s4u_1_1_host" kindref="compound">Host</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="61" column="8" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1ac1a78dbe5b8f46ff8c49c58be6cf6c8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::unordered_map&lt; std::string, std::string &gt; *</type>
        <definition>const std::unordered_map&lt;std::string, std::string&gt;* simgrid::s4u::Storage::get_properties</definition>
        <argsstring>() const</argsstring>
        <name>get_properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="63" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1a7bffda2185454037fe4cef4da6795516" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* simgrid::s4u::Storage::get_property</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>get_property</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="64" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1a97df8eef5bad3d22f93bcacb0ac2ef45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void simgrid::s4u::Storage::set_property</definition>
        <argsstring>(const std::string &amp;, const std::string &amp;value)</argsstring>
        <name>set_property</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="65" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1ad6dce3cff553cfb4a44d2ad84943d0d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IoPtr</type>
        <definition>IoPtr simgrid::s4u::Storage::io_init</definition>
        <argsstring>(sg_size_t size, s4u::Io::OpType type)</argsstring>
        <name>io_init</name>
        <param>
          <type>sg_size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>s4u::Io::OpType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="67" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1ab665b987865fbf1a2eb3d3f18db50e60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IoPtr</type>
        <definition>IoPtr simgrid::s4u::Storage::read_async</definition>
        <argsstring>(sg_size_t size)</argsstring>
        <name>read_async</name>
        <param>
          <type>sg_size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="69" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1a6baf7af4c7dc502a5896f601c4206c49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sg_size_t</type>
        <definition>sg_size_t simgrid::s4u::Storage::read</definition>
        <argsstring>(sg_size_t size)</argsstring>
        <name>read</name>
        <param>
          <type>sg_size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="70" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1add97caf66d85c7e761c8acd7bbb03642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IoPtr</type>
        <definition>IoPtr simgrid::s4u::Storage::write_async</definition>
        <argsstring>(sg_size_t size)</argsstring>
        <name>write_async</name>
        <param>
          <type>sg_size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="72" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1a477b221a506e80a7df0fd79bc3f3fda2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sg_size_t</type>
        <definition>sg_size_t simgrid::s4u::Storage::write</definition>
        <argsstring>(sg_size_t size)</argsstring>
        <name>write</name>
        <param>
          <type>sg_size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="73" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1aa578a9166869c9eb73d9f9a944b6e61e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>kernel::resource::StorageImpl *</type>
        <definition>kernel::resource::StorageImpl* simgrid::s4u::Storage::get_impl</definition>
        <argsstring>() const</argsstring>
        <name>get_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="74" column="33" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1a65d0a74781c5a05253901bd66017a17d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual simgrid::s4u::Storage::~Storage</definition>
        <argsstring>()=default</argsstring>
        <name>~Storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="40" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1a0e5504756b82c2034edd3aa6455099cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsimgrid_1_1s4u_1_1_storage" kindref="compound">Storage</ref> *</type>
        <definition>static Storage* simgrid::s4u::Storage::by_name</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>by_name</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve a Storage by its name. It must exist in the platform file </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="51" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_storage_1a7b9f55139b2ee8057c21c4361a05b0c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsimgrid_1_1s4u_1_1_storage" kindref="compound">Storage</ref> *</type>
        <definition>static Storage* simgrid::s4u::Storage::by_name_or_null</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>by_name_or_null</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="52" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Storage represent the disk resources, usually associated to a given host</para>
<para>By default, SimGrid does not keep track of the actual data being written but only computes the time taken by the corresponding data movement. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>simgrid::xbt::Extendable&lt; Storage &gt;</label>
      </node>
      <node id="1">
        <label>simgrid::s4u::Storage</label>
        <link refid="classsimgrid_1_1s4u_1_1_storage"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>simgrid::xbt::Extendable&lt; Storage &gt;</label>
      </node>
      <node id="1">
        <label>simgrid::s4u::Storage</label>
        <link refid="classsimgrid_1_1s4u_1_1_storage"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" line="31" column="1" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Storage.hpp" bodystart="31" bodyend="80"/>
    <listofallmembers>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1a3c8ad5d3f18a692a9618db8d9b4c4c8c" prot="private" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>attached_to_</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1a0e5504756b82c2034edd3aa6455099cb" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>by_name</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1a7b9f55139b2ee8057c21c4361a05b0c4" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>by_name_or_null</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1a0ca46fcfc28735fdceb560739f268082" prot="private" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>Engine</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1adc050acaa1ea1e22c245bca2f405e952" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>get_cname</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1ad9c658fee823155b4e69eaa396901eeb" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>get_host</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1aa578a9166869c9eb73d9f9a944b6e61e" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>get_impl</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1a3a4de7defe005cc3335095fb2bde0efd" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>get_name</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1ac1a78dbe5b8f46ff8c49c58be6cf6c8b" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>get_properties</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1a7bffda2185454037fe4cef4da6795516" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>get_property</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1a0b1ac9ccab7637a8c604324b5786ceda" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>get_type</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1acb17138e6900643a32a4a4cac0def5e9" prot="private" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>Io</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1ad6dce3cff553cfb4a44d2ad84943d0d3" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>io_init</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1ac184414da1b76f2c64aaac0553cc2302" prot="private" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>name_</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1af2a5e515d0fc485a8b3040b70140a7de" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>on_creation</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1acdd1ac6e9c25ea7394d23829b4438195" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>on_destruction</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1a0dcbdd974d7d76c59693fe96d2bb39d9" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>on_state_change</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1a22b17274c069420d4baebd49c07b7e46" prot="private" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>pimpl_</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1a6baf7af4c7dc502a5896f601c4206c49" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>read</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1ab665b987865fbf1a2eb3d3f18db50e60" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>read_async</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1ad04ff33c99455bb2aff02ecb90031ab6" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>set_host</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1a97df8eef5bad3d22f93bcacb0ac2ef45" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>set_property</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1a68d0fd3f5f498fb3615d933b8016192d" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>Storage</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1a477b221a506e80a7df0fd79bc3f3fda2" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>write</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1add97caf66d85c7e761c8acd7bbb03642" prot="public" virt="non-virtual"><scope>simgrid::s4u::Storage</scope><name>write_async</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_storage_1a65d0a74781c5a05253901bd66017a17d" prot="protected" virt="virtual"><scope>simgrid::s4u::Storage</scope><name>~Storage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
