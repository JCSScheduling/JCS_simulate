<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classsimgrid_1_1s4u_1_1_exec" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>simgrid::s4u::Exec</compoundname>
    <basecompoundref refid="classsimgrid_1_1s4u_1_1_activity___t" prot="public" virt="non-virtual">simgrid::s4u::Activity_T&lt; Exec &gt;</basecompoundref>
    <derivedcompoundref refid="classsimgrid_1_1s4u_1_1_exec_par" prot="public" virt="non-virtual">simgrid::s4u::ExecPar</derivedcompoundref>
    <derivedcompoundref refid="classsimgrid_1_1s4u_1_1_exec_seq" prot="public" virt="non-virtual">simgrid::s4u::ExecSeq</derivedcompoundref>
    <includes refid="_exec_8hpp" local="no">Exec.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsimgrid_1_1s4u_1_1_exec_1a052df3959fe369d72f0d5363462c2614" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double simgrid::s4u::Exec::priority_</definition>
        <argsstring></argsstring>
        <name>priority_</name>
        <initializer>= 1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="33" column="10" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsimgrid_1_1s4u_1_1_exec_1a51a70c502c0488f8a4de20fff80bffe4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double simgrid::s4u::Exec::bound_</definition>
        <argsstring></argsstring>
        <name>bound_</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="34" column="10" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsimgrid_1_1s4u_1_1_exec_1af96e29a5730cfbd9b1538284d211d6a8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double simgrid::s4u::Exec::timeout_</definition>
        <argsstring></argsstring>
        <name>timeout_</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="35" column="10" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classsimgrid_1_1s4u_1_1_exec_1a2885e4e2346119dc26cde65579a33563" prot="public" static="yes" mutable="no">
        <type>xbt::signal&lt; void(<ref refid="classsimgrid_1_1s4u_1_1_actor" kindref="compound">Actor</ref> const  &amp;, <ref refid="classsimgrid_1_1s4u_1_1_exec" kindref="compound">Exec</ref> const  &amp;)&gt;</type>
        <definition>xbt::signal&lt;void(Actor const&amp;, Exec const&amp;)&gt; simgrid::s4u::Exec::on_start</definition>
        <argsstring></argsstring>
        <name>on_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="49" column="22" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsimgrid_1_1s4u_1_1_exec_1a4b4564ccc63affde144820a1c01db007" prot="public" static="yes" mutable="no">
        <type>xbt::signal&lt; void(<ref refid="classsimgrid_1_1s4u_1_1_actor" kindref="compound">Actor</ref> const  &amp;, <ref refid="classsimgrid_1_1s4u_1_1_exec" kindref="compound">Exec</ref> const  &amp;)&gt;</type>
        <definition>xbt::signal&lt;void(Actor const&amp;, Exec const&amp;)&gt; simgrid::s4u::Exec::on_completion</definition>
        <argsstring></argsstring>
        <name>on_completion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="50" column="22" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1a0c40973a783ebc603a55121727e4e3e4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>simgrid::s4u::Exec::Exec</definition>
        <argsstring>()</argsstring>
        <name>Exec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="38" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1a26e550a64f5e73357ae125685b30031f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual simgrid::s4u::Exec::~Exec</definition>
        <argsstring>()=default</argsstring>
        <name>~Exec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="41" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1a5b41b24f53eabb80b8a8e3c3e0556ed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classsimgrid_1_1s4u_1_1_exec" kindref="compound">Exec</ref> *</type>
        <definition>Exec* simgrid::s4u::Exec::start</definition>
        <argsstring>() override=0</argsstring>
        <name>start</name>
        <reimplements refid="classsimgrid_1_1s4u_1_1_activity_1aec81cccb77612d00990e287640609640">start</reimplements>
        <reimplementedby refid="classsimgrid_1_1s4u_1_1_exec_seq_1aa338aa145000acbfe8eb6bcec8a7b235">start</reimplementedby>
        <reimplementedby refid="classsimgrid_1_1s4u_1_1_exec_par_1ab9a5114ebb668aca1f2052a680e1d9a8">start</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts a previously created activity.</para>
<para>This function is optional: you can call wait() even if you didn&apos;t call start() </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="52" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1a3aa83db5bdd09d7853198540633d0931" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double simgrid::s4u::Exec::get_remaining_ratio</definition>
        <argsstring>()=0</argsstring>
        <name>get_remaining_ratio</name>
        <reimplementedby refid="classsimgrid_1_1s4u_1_1_exec_seq_1ab507e706cbca88b126c4eb0b24e08151">get_remaining_ratio</reimplementedby>
        <reimplementedby refid="classsimgrid_1_1s4u_1_1_exec_par_1a2db2c83cf95f2d75c5185cbc68213106">get_remaining_ratio</reimplementedby>
        <briefdescription>
<para>On sequential executions, returns the amount of flops that remain to be done; This cannot be used on parallel executions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="55" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1a859446c5dcaffd37a4b51439e886eb57" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>ExecPtr</type>
        <definition>virtual ExecPtr simgrid::s4u::Exec::set_host</definition>
        <argsstring>(Host *host)=0</argsstring>
        <name>set_host</name>
        <reimplementedby refid="classsimgrid_1_1s4u_1_1_exec_par_1a4fdaf213391f29d1d0fa0ce1e9c9beb9">set_host</reimplementedby>
        <reimplementedby refid="classsimgrid_1_1s4u_1_1_exec_seq_1a6cc24b91311ec539fb13b62ed3387250">set_host</reimplementedby>
        <param>
          <type><ref refid="classsimgrid_1_1s4u_1_1_host" kindref="compound">Host</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="56" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1afb62374d66600b742c55e4d4ba303b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsimgrid_1_1s4u_1_1_exec" kindref="compound">Exec</ref> *</type>
        <definition>Exec* simgrid::s4u::Exec::wait</definition>
        <argsstring>() override</argsstring>
        <name>wait</name>
        <reimplements refid="classsimgrid_1_1s4u_1_1_activity_1a58b0dc13c2ee8c68376f2a2a714fc3bf">wait</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Blocks until the activity is terminated </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="58" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1a5d3452b0b4e02884ff2750c670a6f9a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsimgrid_1_1s4u_1_1_exec" kindref="compound">Exec</ref> *</type>
        <definition>Exec* simgrid::s4u::Exec::wait_for</definition>
        <argsstring>(double timeout) override</argsstring>
        <name>wait_for</name>
        <reimplements refid="classsimgrid_1_1s4u_1_1_activity_1a86c386ac35303cd1f3b90d0202c83e6d">wait_for</reimplements>
        <param>
          <type>double</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Blocks until the activity is terminated, or until the timeout is elapsed Raises: timeout exception. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="59" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1a4a4747f6def1a43c5c9c67d7b951dcd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool simgrid::s4u::Exec::test</definition>
        <argsstring>() override</argsstring>
        <name>test</name>
        <reimplements refid="classsimgrid_1_1s4u_1_1_activity_1a2e5de7a6fa5aac5a6cb68eae64ea1822">test</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tests whether the given activity is terminated yet. This is a pure function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="66" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1aed01787360951d2a603122c07c36f2de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ExecPtr</type>
        <definition>ExecPtr simgrid::s4u::Exec::set_bound</definition>
        <argsstring>(double bound)</argsstring>
        <name>set_bound</name>
        <param>
          <type>double</type>
          <declname>bound</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="68" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1aa0f628c04c7d4f4b6f56c1bce1212d8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ExecPtr</type>
        <definition>ExecPtr simgrid::s4u::Exec::set_priority</definition>
        <argsstring>(double priority)</argsstring>
        <name>set_priority</name>
        <param>
          <type>double</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="69" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1a1f4c0c6d04053cacb53811b390aaceca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ExecPtr</type>
        <definition>ExecPtr simgrid::s4u::Exec::set_timeout</definition>
        <argsstring>(double timeout)</argsstring>
        <name>set_timeout</name>
        <param>
          <type>double</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="70" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1a130c44c226e90bbb974f38da89f3e268" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsimgrid_1_1s4u_1_1_exec" kindref="compound">Exec</ref> *</type>
        <definition>Exec* simgrid::s4u::Exec::cancel</definition>
        <argsstring>() override</argsstring>
        <name>cancel</name>
        <reimplements refid="classsimgrid_1_1s4u_1_1_activity_1ac470ea7781f009a8d085aa16fa373d44">cancel</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cancel that activity </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="71" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1a2dc0e26e10ebe4d9c02be34a1cc78a9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsimgrid_1_1s4u_1_1_host" kindref="compound">Host</ref> *</type>
        <definition>Host* simgrid::s4u::Exec::get_host</definition>
        <argsstring>() const</argsstring>
        <name>get_host</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="72" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1ad81045501732d8f5342a2485d251224d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int simgrid::s4u::Exec::get_host_number</definition>
        <argsstring>() const</argsstring>
        <name>get_host_number</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="73" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1aeea0fb7ae34ed0aecb1721c3380f51a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double simgrid::s4u::Exec::get_start_time</definition>
        <argsstring>() const</argsstring>
        <name>get_start_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="74" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1ac0a2c16574aeb3e49434ea58320cf7e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double simgrid::s4u::Exec::get_finish_time</definition>
        <argsstring>() const</argsstring>
        <name>get_finish_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="75" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1a22c0d593f3189cddcd203abb1824c4a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double simgrid::s4u::Exec::get_cost</definition>
        <argsstring>() const</argsstring>
        <name>get_cost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="76" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1a94ae1408770c1b01d1e823c78250c326" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int simgrid::s4u::Exec::wait_any</definition>
        <argsstring>(std::vector&lt; ExecPtr &gt; *execs)</argsstring>
        <name>wait_any</name>
        <param>
          <type>std::vector&lt; ExecPtr &gt; *</type>
          <declname>execs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>take a vector of s4u::ExecPtr and return when one of them is finished. The return value is the rank of the first finished ExecPtr. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="62" column="14" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classsimgrid_1_1s4u_1_1_exec_1a356da981bb56f71dd81e341b296025db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int simgrid::s4u::Exec::wait_any_for</definition>
        <argsstring>(std::vector&lt; ExecPtr &gt; *execs, double timeout)</argsstring>
        <name>wait_any_for</name>
        <param>
          <type>std::vector&lt; ExecPtr &gt; *</type>
          <declname>execs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as wait_any, but with a timeout. If the timeout occurs, parameter last is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="64" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Computation Activity, representing the asynchronous executions.</para>
<para><verbatim>* Most of them are created with :cpp:func:`simgrid::s4u::this_actor::exec_init()` or
* :cpp:func:`simgrid::s4u::Host::execute()`, and represent a classical (sequential) execution. This can be used to
* simulate some computation occuring in another thread when the calling actor is not blocked during the execution.
*
* You can also use :cpp:func:`simgrid::s4u::this_actor::parallel_execute()` to create *parallel* executions. These
* objects represent distributed computations involving computations on several hosts and communications between them.
* Such objects can for example represent a matrix multiplication done with ScaLAPACK on a real system. Once created,
* parallel Exec are very similar to the sequential ones. The only difference is that you cannot migrate them, and their
* remaining amount of work can only be defined as a ratio. See the doc of :cpp:func:`simgrid::s4u::Exec::get_remaining`
* and :cpp:func:`simgrid::s4u::Exec::get_remaining_ratio` for more info.
* </verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>simgrid::s4u::ExecPar</label>
        <link refid="classsimgrid_1_1s4u_1_1_exec_par"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>simgrid::s4u::Activity</label>
        <link refid="classsimgrid_1_1s4u_1_1_activity"/>
      </node>
      <node id="2">
        <label>simgrid::s4u::Activity_T&lt; Exec &gt;</label>
        <link refid="classsimgrid_1_1s4u_1_1_activity___t"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>simgrid::s4u::Exec</label>
        <link refid="classsimgrid_1_1s4u_1_1_exec"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>simgrid::s4u::ExecSeq</label>
        <link refid="classsimgrid_1_1s4u_1_1_exec_seq"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>simgrid::s4u::Activity</label>
        <link refid="classsimgrid_1_1s4u_1_1_activity"/>
      </node>
      <node id="2">
        <label>simgrid::s4u::Activity_T&lt; Exec &gt;</label>
        <link refid="classsimgrid_1_1s4u_1_1_activity___t"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>simgrid::s4u::Exec</label>
        <link refid="classsimgrid_1_1s4u_1_1_exec"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" line="32" column="1" bodyfile="/Users/bytedance/codes/schedule_simulate/simgrid-v3.25/include/simgrid/s4u/Exec.hpp" bodystart="32" bodyend="77"/>
    <listofallmembers>
      <member refid="classsimgrid_1_1s4u_1_1_activity_1ab74d690b9177c75204199b671e84baee" prot="protected" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>Activity</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity___t_1aae31b96e797bdad3047c7228c598cec0" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>add_successor</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a51a70c502c0488f8a4de20fff80bffe4" prot="private" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>bound_</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a130c44c226e90bbb974f38da89f3e268" prot="public" virt="virtual"><scope>simgrid::s4u::Exec</scope><name>cancel</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a0c40973a783ebc603a55121727e4e3e4" prot="protected" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>Exec</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity___t_1ad4c017392a1f1c12d370f9901034edee" prot="public" virt="virtual"><scope>simgrid::s4u::Exec</scope><name>get_cname</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a22c0d593f3189cddcd203abb1824c4a6" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>get_cost</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1ac0a2c16574aeb3e49434ea58320cf7e5" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>get_finish_time</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a2dc0e26e10ebe4d9c02be34a1cc78a9d" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>get_host</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1ad81045501732d8f5342a2485d251224d" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>get_host_number</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity_1a84a59b0755885ca1872d159ac6136dbf" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>get_impl</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity___t_1a93f2ec165abf66d48fee44ac2fb33db3" prot="public" virt="virtual"><scope>simgrid::s4u::Exec</scope><name>get_name</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity_1ac2d222f4995e7882b809a1cd201b916b" prot="public" virt="virtual"><scope>simgrid::s4u::Exec</scope><name>get_remaining</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a3aa83db5bdd09d7853198540633d0931" prot="public" virt="pure-virtual"><scope>simgrid::s4u::Exec</scope><name>get_remaining_ratio</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1aeea0fb7ae34ed0aecb1721c3380f51a3" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>get_start_time</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity_1a598a46faf0103871ad4f7f971cf3717e" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>get_state</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity___t_1a224236130c457487bb8e36c32f5f2cb3" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>get_tracing_category</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity___t_1a0bacceb6565d0291b656c174a70f6e14" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>get_user_data</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a4b4564ccc63affde144820a1c01db007" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>on_completion</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a2885e4e2346119dc26cde65579a33563" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>on_start</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a052df3959fe369d72f0d5363462c2614" prot="private" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>priority_</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity_1aac8ef492e90f999367cfa74d1d19e8c6" prot="protected" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>release_dependencies</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1aed01787360951d2a603122c07c36f2de" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>set_bound</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a859446c5dcaffd37a4b51439e886eb57" prot="public" virt="pure-virtual"><scope>simgrid::s4u::Exec</scope><name>set_host</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity___t_1a1c00a54c348209990ad45f5ec25c65f1" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>set_name</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1aa0f628c04c7d4f4b6f56c1bce1212d8a" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>set_priority</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity_1aa0718f864e7de86ac46e4a73a76653af" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>set_remaining</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity_1a6e28ee9ccc94500a50d93db735cf5b88" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>set_state</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a1f4c0c6d04053cacb53811b390aaceca" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>set_timeout</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity___t_1a70919b1d2683f69fca784e111cbdf5ff" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>set_tracing_category</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity___t_1add5d2eed1bc2834d94bea0a6022d9395" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>set_user_data</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a5b41b24f53eabb80b8a8e3c3e0556ed2" prot="public" virt="pure-virtual"><scope>simgrid::s4u::Exec</scope><name>start</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity_1a963055035b495361760860374bd669b5" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>State</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a4a4747f6def1a43c5c9c67d7b951dcd8" prot="public" virt="virtual"><scope>simgrid::s4u::Exec</scope><name>test</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1af96e29a5730cfbd9b1538284d211d6a8" prot="private" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>timeout_</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity_1a7ab9c2b429bf203f18a4228079e804b3" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>vetoable_start</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1afb62374d66600b742c55e4d4ba303b96" prot="public" virt="virtual"><scope>simgrid::s4u::Exec</scope><name>wait</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a94ae1408770c1b01d1e823c78250c326" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>wait_any</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a356da981bb56f71dd81e341b296025db" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>wait_any_for</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a5d3452b0b4e02884ff2750c670a6f9a6" prot="public" virt="virtual"><scope>simgrid::s4u::Exec</scope><name>wait_for</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity_1a215a4305bef1bc337f62440abe3f7e38" prot="public" virt="non-virtual"><scope>simgrid::s4u::Exec</scope><name>wait_until</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_activity_1abff2c86ef9ca12addc45c5b2c1a76fd0" prot="protected" virt="virtual"><scope>simgrid::s4u::Exec</scope><name>~Activity</name></member>
      <member refid="classsimgrid_1_1s4u_1_1_exec_1a26e550a64f5e73357ae125685b30031f" prot="public" virt="virtual"><scope>simgrid::s4u::Exec</scope><name>~Exec</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
